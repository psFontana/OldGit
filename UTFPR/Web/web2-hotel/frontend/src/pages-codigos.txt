frontend>src>pages>Endereco>EnderecoCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const EnderecoCreate = () => {
  const [form, setForm] = useState({
    cep: "",
    numero: "",
    complemento: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/endereco", form);
      navigate("/endereco/list");
    } catch (err) {
      alert("Erro ao cadastrar endereço.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Cadastrar Novo Endereço</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>CEP</Form.Label>
              <Form.Control
                type="text"
                name="cep"
                value={form.cep}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Número</Form.Label>
              <Form.Control
                type="text"
                name="numero"
                value={form.numero}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Complemento</Form.Label>
              <Form.Control
                type="text"
                name="complemento"
                value={form.complemento}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default EnderecoCreate;
```

frontend>src>pages>Endereco>EnderecoList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const EnderecoList = () => {
  const [enderecos, setEnderecos] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchEnderecos = async () => {
      try {
        const response = await api.get("/endereco");
        setEnderecos(response.data);
      } catch (error) {
        setErro("Erro ao buscar endereços.");
      }
    };
    fetchEnderecos();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este endereço?")) {
      try {
        await api.delete(`/endereco/${id}`);
        setEnderecos(enderecos.filter((e) => e.id !== id));
      } catch (error) {
        alert("Erro ao deletar endereço.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Endereços</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>ID</th>
            <th>CEP</th>
            <th>Número</th>
            <th>Complemento</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {enderecos.length ? (
            enderecos.map((endereco) => (
              <tr key={endereco.id}>
                <td>{endereco.id}</td>
                <td>{endereco.cep}</td>
                <td>{endereco.numero}</td>
                <td>{endereco.complemento}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() => navigate(`/endereco/update/${endereco.id}`)}
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(endereco.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="5" className="text-center">
                Nenhum endereço encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default EnderecoList;
```

frontend>src>pages>Endereco>EnderecoUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const EnderecoUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    cep: "",
    numero: "",
    complemento: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/endereco/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do endereço."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/endereco/${id}`, form);
      navigate("/endereco/list");
    } catch (err) {
      alert("Erro ao atualizar endereço.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Editar Endereço</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>CEP</Form.Label>
              <Form.Control
                type="text"
                name="cep"
                value={form.cep}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Número</Form.Label>
              <Form.Control
                type="text"
                name="numero"
                value={form.numero}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Complemento</Form.Label>
              <Form.Control
                type="text"
                name="complemento"
                value={form.complemento}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default EnderecoUpdate;
```

frontend>src>pages>Prato>PratoCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const PratoCreate = () => {
  const [form, setForm] = useState({
    nome: "",
    descricao: "",
    preco: "",
    restauranteId: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/prato", form);
      navigate("/prato/list");
    } catch (err) {
      alert("Erro ao cadastrar prato.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Cadastrar Novo Prato</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome:</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Descrição:</Form.Label>
              <Form.Control
                type="text"
                name="descricao"
                value={form.descricao}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Preço:</Form.Label>
              <Form.Control
                type="number"
                step="0.01"
                name="preco"
                value={form.preco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="restauranteId"
                value={form.restauranteId}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default PratoCreate;
```

frontend>src>pages>Prato>PratoList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const PratoList = () => {
  const [pratos, setPratos] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchPratos = async () => {
      try {
        const response = await api.get("/prato");
        setPratos(response.data);
      } catch (error) {
        setErro("Erro ao buscar pratos.");
      }
    };
    fetchPratos();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este prato?")) {
      try {
        await api.delete(`/prato/${id}`);
        setPratos(pratos.filter((p) => p.id !== id));
      } catch (error) {
        alert("Erro ao deletar prato.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Pratos</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Nome</th>
            <th>Descrição</th>
            <th>Preço</th>
            <th>Restaurante ID</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {pratos.length ? (
            pratos.map((prato) => (
              <tr key={prato.id}>
                <td>{prato.nome}</td>
                <td>{prato.descricao}</td>
                <td>{prato.preco}</td>
                <td>{prato.restauranteId}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() => navigate(`/prato/update/${prato.id}`)}
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(prato.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="5" className="text-center">
                Nenhum prato encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default PratoList;
```

frontend>src>pages>prato>PratoUpdate.jsx:
```
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const PratoUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    nome: "",
    descricao: "",
    preco: "",
    restauranteId: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/prato/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do prato."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/prato/${id}`, form);
      navigate("/prato/list");
    } catch (err) {
      alert("Erro ao atualizar prato.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Editar Prato</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome:</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Descrição:</Form.Label>
              <Form.Control
                type="text"
                name="descricao"
                value={form.descricao}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Preço:</Form.Label>
              <Form.Control
                type="number"
                step="0.01"
                name="preco"
                value={form.preco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="restauranteId"
                value={form.restauranteId}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default PratoUpdate;
```

frontend>src>pages>Pedido>PedidoCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const PedidoCreate = () => {
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
    data: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/pedido", form);
      navigate("/pedido/list");
    } catch (err) {
      alert("Erro ao fazer pedido.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Fazer Novo Pedido</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Data:</Form.Label>
              <Form.Control
                type="date"
                name="data"
                value={form.data}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default PedidoCreate;
```

frontend>src>pages>Pedido>PedidoList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api.js";
import { useNavigate } from "react-router-dom";

const PedidoList = () => {
  const [pedidos, setPedidos] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchPedidos = async () => {
      try {
        const response = await api.get("/pedido");
        setPedidos(response.data);
      } catch (error) {
        setErro("Erro ao buscar pedidos.");
      }
    };
    fetchPedidos();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este pedido?")) {
      try {
        await api.delete(`/pedido/${id}`);
        setPedidos(pedidos.filter((p) => p.id !== id));
      } catch (error) {
        alert("Erro ao deletar pedido.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Pedidos</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Usuário ID</th>
            <th>Restaurante ID</th>
            <th>Data</th>
            <th>Status</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {pedidos.length ? (
            pedidos.map((pedido) => (
              <tr key={pedido.id}>
                <td>{pedido.id_usuario}</td>
                <td>{pedido.id_restaurante}</td>
                <td>{pedido.data}</td>
                <td>{pedido.status}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() => navigate(`/pedido/update/${pedido.id}`)}
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(pedido.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="5" className="text-center">
                Nenhum pedido encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default PedidoList;
```

frontend>src>pages>Pedido>PedidoUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const PedidoUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
    data: "",
    status: "Pendente",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/pedido/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do pedido."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/pedido/${id}`, form);
      navigate("/pedido/list");
    } catch (err) {
      alert("Erro ao atualizar pedido.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Atualizar Pedido</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Data:</Form.Label>
              <Form.Control
                type="date"
                name="data"
                value={form.data}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Status:</Form.Label>
              <Form.Select
                name="status"
                value={form.status}
                onChange={handleChange}
                required
              >
                <option value="Pendente">Pendente</option>
                <option value="Em Preparação">Em Preparação</option>
                <option value="Entregue">Entregue</option>
              </Form.Select>
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default PedidoUpdate;
```

frontend>src>pages>Favorito>FavoritoCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const FavoritoCreate = () => {
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/favoritos", form);
      navigate("/favoritos/list");
    } catch (err) {
      alert("Erro ao adicionar favorito.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Adicionar Restaurante Favorito</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default FavoritoCreate;
```

frontend>src>pages>Favorito>FavoritoList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const FavoritoList = () => {
  const [favoritos, setFavoritos] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchFavoritos = async () => {
      try {
        const response = await api.get("/favoritos");
        setFavoritos(response.data);
      } catch (error) {
        setErro("Erro ao buscar favoritos.");
      }
    };
    fetchFavoritos();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este favorito?")) {
      try {
        await api.delete(`/favoritos/${id}`);
        setFavoritos(favoritos.filter((f) => f.id !== id));
      } catch (error) {
        alert("Erro ao deletar favorito.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Favoritos</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Usuário ID</th>
            <th>Restaurante ID</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {favoritos.length ? (
            favoritos.map((favorito) => (
              <tr key={favorito.id}>
                <td>{favorito.id_usuario}</td>
                <td>{favorito.id_restaurante}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() => navigate(`/favoritos/update/${favorito.id}`)}
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(favorito.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="3" className="text-center">
                Nenhum favorito encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default FavoritoList;
```

frontend>src>pages>Favorito>FavoritoUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const FavoritoUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/favoritos/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do favorito."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/favoritos/${id}`, form);
      navigate("/favoritos/list");
    } catch (err) {
      alert("Erro ao atualizar favorito.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Atualizar Favorito</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default FavoritoUpdate;
```

frontend>src>pages>Usuario>UsuarioCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioCreate = () => {
  const [form, setForm] = useState({
    nome: "",
    email: "",
    senha: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/usuario", form);
      navigate("/usuario/list");
    } catch (err) {
      alert("Erro ao cadastrar usuário.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Cadastrar Novo Usuário</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome:</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Email:</Form.Label>
              <Form.Control
                type="email"
                name="email"
                value={form.email}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Senha:</Form.Label>
              <Form.Control
                type="password"
                name="senha"
                value={form.senha}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioCreate;
```

frontend>src>pages>Usuario>UsuarioList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioList = () => {
  const [usuarios, setUsuarios] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUsuarios = async () => {
      try {
        const response = await api.get("/usuario");
        setUsuarios(response.data);
      } catch (error) {
        setErro("Erro ao buscar usuários.");
      }
    };
    fetchUsuarios();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este usuário?")) {
      try {
        await api.delete(`/usuario/${id}`);
        setUsuarios(usuarios.filter((u) => u.id !== id));
      } catch (error) {
        alert("Erro ao deletar usuário.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Usuários</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Nome</th>
            <th>Email</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {usuarios.length ? (
            usuarios.map((usuario) => (
              <tr key={usuario.id}>
                <td>{usuario.nome}</td>
                <td>{usuario.email}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() => navigate(`/usuario/update/${usuario.id}`)}
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(usuario.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="3" className="text-center">
                Nenhum usuário encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default UsuarioList;
```

frontend>src>pages>Usuario>UsuarioUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const UsuarioUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    nome: "",
    email: "",
    senha: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/usuario/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do usuário."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/usuario/${id}`, form);
      navigate("/usuario/list");
    } catch (err) {
      alert("Erro ao atualizar usuário.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Atualizar Usuário</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome:</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Email:</Form.Label>
              <Form.Control
                type="email"
                name="email"
                value={form.email}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Senha:</Form.Label>
              <Form.Control
                type="password"
                name="senha"
                value={form.senha}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioUpdate;
```

frontend>src>pages>UsuarioRestaurante>UsuarioRestauranteUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const UsuarioRestauranteUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/usuarioRestaurante/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do vínculo."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/usuarioRestaurante/${id}`, form);
      navigate("/usuario-restaurante/list");
    } catch (err) {
      alert("Erro ao atualizar vínculo.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Atualizar Vínculo Usuário-Restaurante</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioRestauranteUpdate;
```

frontend>src>pages>UsuarioRestaurante>UsuarioRestauranteCreate.jsx:
```
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioRestauranteCreate = () => {
  const [form, setForm] = useState({
    id_usuario: "",
    id_restaurante: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/usuarioRestaurante/vincular", form);
      navigate("/usuario-restaurante/list");
    } catch (err) {
      alert("Erro ao vincular usuário ao restaurante.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Vincular Usuário a Restaurante</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Restaurante ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_restaurante"
                value={form.id_restaurante}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Vincular
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioRestauranteCreate;
```

frontend>src>pages>UsuarioRestaurante>UsuarioRestauranteList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioRestauranteList = () => {
  const [usuariosRestaurantes, setUsuariosRestaurantes] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUsuariosRestaurantes = async () => {
      try {
        const response = await api.get("/usuarioRestaurante");
        setUsuariosRestaurantes(response.data);
      } catch (error) {
        setErro("Erro ao buscar vínculos de usuário-restaurante.");
      }
    };
    fetchUsuariosRestaurantes();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este vínculo?")) {
      try {
        await api.delete(`/usuarioRestaurante/${id}`);
        setUsuariosRestaurantes(
          usuariosRestaurantes.filter((ur) => ur.id !== id)
        );
      } catch (error) {
        alert("Erro ao deletar vínculo.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Vínculos Usuário-Restaurante</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Usuário ID</th>
            <th>Restaurante ID</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {usuariosRestaurantes.length ? (
            usuariosRestaurantes.map((usuarioRestaurante) => (
              <tr key={usuarioRestaurante.id}>
                <td>{usuarioRestaurante.id_usuario}</td>
                <td>{usuarioRestaurante.id_restaurante}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() =>
                      navigate(
                        `/usuario-restaurante/update/${usuarioRestaurante.id}`
                      )
                    }
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(usuarioRestaurante.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="3" className="text-center">
                Nenhum vínculo encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default UsuarioRestauranteList;
```

frontend>src>pages>Usuario>Login.jsx:
```
// src/pages/Usuario/Login.jsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api.js";

const Login = () => {
  const [email, setEmail] = useState("");
  const [senha, setSenha] = useState("");
  const navigate = useNavigate();

  const handleLogin = async (e) => {
    e.preventDefault();
    try {
      const response = await api.post("/usuario/login", { email, senha });
      localStorage.setItem("token", response.data.token);
      navigate("/Home");
    } catch (error) {
      alert("Login falhou. Verifique seu e-mail e senha.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "25rem" }}>
        <Card.Header>
          <h5>Login</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleLogin}>
            <Form.Group className="mb-3">
              <Form.Label>Email</Form.Label>
              <Form.Control
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Senha</Form.Label>
              <Form.Control
                type="password"
                value={senha}
                onChange={(e) => setSenha(e.target.value)}
                required
              />
            </Form.Group>
            <Button variant="primary" type="submit" className="w-100">
              Entrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default Login;
```

frontend>src>pages>UsuarioEndereco>UsuarioEnderecoCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioEnderecoCreate = () => {
  const [form, setForm] = useState({
    id_usuario: "",
    id_endereco: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/usuarioEndereco", form);
      navigate("/usuario-endereco/list");
    } catch (err) {
      alert("Erro ao vincular usuário ao endereço.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Vincular Usuário a Endereço</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Endereço ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_endereco"
                value={form.id_endereco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Vincular
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioEnderecoCreate;
```

frontend>src>pages>UsuarioEndereco>UsuarioEnderecoList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const UsuarioEnderecoList = () => {
  const [usuarioEnderecos, setUsuarioEnderecos] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUsuarioEnderecos = async () => {
      try {
        const response = await api.get("/usuarioEndereco");
        setUsuarioEnderecos(response.data);
      } catch (error) {
        setErro("Erro ao buscar vínculos de usuário-endereço.");
      }
    };
    fetchUsuarioEnderecos();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este vínculo?")) {
      try {
        await api.delete(`/usuarioEndereco/${id}`);
        setUsuarioEnderecos(usuarioEnderecos.filter((ue) => ue.id !== id));
      } catch (error) {
        alert("Erro ao deletar vínculo.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Vínculos Usuário-Endereço</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>Usuário ID</th>
            <th>Endereço ID</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {usuarioEnderecos.length ? (
            usuarioEnderecos.map((usuarioEndereco) => (
              <tr key={usuarioEndereco.id}>
                <td>{usuarioEndereco.id_usuario}</td>
                <td>{usuarioEndereco.id_endereco}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() =>
                      navigate(`/usuario-endereco/update/${usuarioEndereco.id}`)
                    }
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(usuarioEndereco.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="3" className="text-center">
                Nenhum vínculo encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default UsuarioEnderecoList;
```

frontend>src>pages>UsuarioEndereco>UsuarioEnderecoUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const UsuarioEnderecoUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    id_usuario: "",
    id_endereco: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/usuarioEndereco/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do vínculo."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/usuarioEndereco/${id}`, form);
      navigate("/usuario-endereco/list");
    } catch (err) {
      alert("Erro ao atualizar vínculo.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Atualizar Vínculo Usuário-Endereço</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Usuário ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_usuario"
                value={form.id_usuario}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Endereço ID:</Form.Label>
              <Form.Control
                type="number"
                name="id_endereco"
                value={form.id_endereco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default UsuarioEnderecoUpdate;
```

frontend>src>pages>Restaurante>RestauranteCreate.jsx:
```jsx
import React, { useState } from "react";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const RestauranteCreate = () => {
  const [form, setForm] = useState({
    nome: "",
    categoria: "",
    endereco: "",
  });

  const navigate = useNavigate();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.post("/restaurante", form);
      navigate("/restaurante/list");
    } catch (err) {
      alert("Erro ao cadastrar restaurante.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Cadastrar Novo Restaurante</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Categoria</Form.Label>
              <Form.Control
                type="text"
                name="categoria"
                value={form.categoria}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Endereço</Form.Label>
              <Form.Control
                type="text"
                name="endereco"
                value={form.endereco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Cadastrar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default RestauranteCreate;
```

frontend>src>pages>Restaurante>RestauranteList.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { Table, Button, Container, Alert } from "react-bootstrap";
import api from "../../services/api";
import { useNavigate } from "react-router-dom";

const RestauranteList = () => {
  const [restaurantes, setRestaurantes] = useState([]);
  const [erro, setErro] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchRestaurantes = async () => {
      try {
        const response = await api.get("/restaurante");
        setRestaurantes(response.data);
      } catch (error) {
        setErro("Erro ao buscar restaurantes.");
      }
    };
    fetchRestaurantes();
  }, []);

  const handleDelete = async (id) => {
    if (window.confirm("Tem certeza que deseja deletar este restaurante?")) {
      try {
        await api.delete(`/restaurante/${id}`);
        setRestaurantes(restaurantes.filter((r) => r.id !== id));
      } catch (error) {
        alert("Erro ao deletar restaurante.");
      }
    }
  };

  return (
    <Container>
      <h2>Lista de Restaurantes</h2>
      {erro && <Alert variant="danger">{erro}</Alert>}
      <Table striped bordered hover className="mt-3">
        <thead>
          <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Categoria</th>
            <th>Endereço</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          {restaurantes.length ? (
            restaurantes.map((restaurante) => (
              <tr key={restaurante.id}>
                <td>{restaurante.id}</td>
                <td>{restaurante.nome}</td>
                <td>{restaurante.categoria}</td>
                <td>{restaurante.endereco}</td>
                <td>
                  <Button
                    variant="warning"
                    size="sm"
                    onClick={() =>
                      navigate(`/restaurante/update/${restaurante.id}`)
                    }
                  >
                    Editar
                  </Button>{" "}
                  <Button
                    variant="danger"
                    size="sm"
                    onClick={() => handleDelete(restaurante.id)}
                  >
                    Deletar
                  </Button>
                </td>
              </tr>
            ))
          ) : (
            <tr>
              <td colSpan="5" className="text-center">
                Nenhum restaurante encontrado.
              </td>
            </tr>
          )}
        </tbody>
      </Table>
    </Container>
  );
};

export default RestauranteList;
```

frontend>src>pages>Restaurante>RestauranteUpdate.jsx:
```jsx
import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Form, Button, Card, Container } from "react-bootstrap";
import api from "../../services/api";

const RestauranteUpdate = () => {
  const { id } = useParams();
  const [form, setForm] = useState({
    nome: "",
    categoria: "",
    endereco: "",
  });

  const navigate = useNavigate();

  useEffect(() => {
    api
      .get(`/restaurante/${id}`)
      .then((res) => setForm(res.data))
      .catch(() => alert("Erro ao buscar dados do restaurante."));
  }, [id]);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await api.put(`/restaurante/${id}`, form);
      navigate("/restaurante/list");
    } catch (err) {
      alert("Erro ao atualizar restaurante.");
    }
  };

  return (
    <Container className="mt-4 d-flex justify-content-center">
      <Card style={{ width: "40rem" }}>
        <Card.Header>
          <h5>Editar Restaurante</h5>
        </Card.Header>
        <Card.Body>
          <Form onSubmit={handleSubmit}>
            <Form.Group className="mb-3">
              <Form.Label>Nome</Form.Label>
              <Form.Control
                type="text"
                name="nome"
                value={form.nome}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Categoria</Form.Label>
              <Form.Control
                type="text"
                name="categoria"
                value={form.categoria}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Endereço</Form.Label>
              <Form.Control
                type="text"
                name="endereco"
                value={form.endereco}
                onChange={handleChange}
                required
              />
            </Form.Group>
            <Button type="submit" variant="primary" className="w-100">
              Atualizar
            </Button>
          </Form>
        </Card.Body>
      </Card>
    </Container>
  );
};

export default RestauranteUpdate;
```